[{"id": "E1-F1-I1", "title": "E1-F1-I1: Draft multi-channel intake specification", "body": "### Summary\nDeliver Draft multi-channel intake specification for Multi-channel ticket creation (email, portal, chat widget, API) to meet the documented requirements.\n\n### Scope\n- [ ] Architecture brief documents payload, authentication, and throttling requirements for email, portal, chat widget, and API submissions\n- [ ] Mapping of inbound metadata to ticket schema is reviewed with product and engineering leads\n- [ ] Specification stored in shared knowledge base with version control link\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Design,priority:P0,area:Ticketing", "milestone": "Week 1"}, {"id": "E1-F1-I2", "title": "E1-F1-I2: Implement email ingestion pipeline skeleton", "body": "### Summary\nDeliver Implement email ingestion pipeline skeleton for Multi-channel ticket creation (email, portal, chat widget, API) to meet the documented requirements.\n\n### Scope\n- [ ] IMAP listener command stores raw messages to processing queue with tenant context\n- [ ] Basic parser extracts subject, body, sender, attachments into normalized draft ticket structure\n- [ ] Happy-path email converted into persisted ticket using ticket field schema\n- [ ] Dependencies: E1-F1-I1, E1-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F1-I3", "title": "E1-F1-I3: Build chat widget ticket submission endpoint", "body": "### Summary\nDeliver Build chat widget ticket submission endpoint for Multi-channel ticket creation (email, portal, chat widget, API) to meet the documented requirements.\n\n### Scope\n- [ ] Public endpoint authenticates widget tokens and validates rate limits\n- [ ] Payload persisted as ticket with channel metadata and requester contact linking\n- [ ] Error responses follow documented contract for widget integration\n- [ ] Dependencies: E1-F1-I1, E1-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P1,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F1-I4", "title": "E1-F1-I4: Deliver customer portal ticket creation flow", "body": "### Summary\nDeliver Deliver customer portal ticket creation flow for Multi-channel ticket creation (email, portal, chat widget, API) to meet the documented requirements.\n\n### Scope\n- [ ] Portal form supports required fields, file uploads, and channel tagging\n- [ ] Successful submission triggers confirmation screen and email notification template\n- [ ] Invalid submissions show inline validation aligned with UX standards\n- [ ] Dependencies: E1-F1-I1, E1-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Frontend,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F1-I5", "title": "E1-F1-I5: Expose REST API ticket creation endpoint", "body": "### Summary\nDeliver Expose REST API ticket creation endpoint for Multi-channel ticket creation (email, portal, chat widget, API) to meet the documented requirements.\n\n### Scope\n- [ ] Authenticated POST /api/v1/tickets endpoint validates required fields and custom fields payload\n- [ ] API responses include ticket ID, status, and links per JSON:API-style schema\n- [ ] Endpoint covered by automated request tests for success and validation failures\n- [ ] Dependencies: E1-F1-I1, E1-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F2-I1", "title": "E1-F2-I1: Design tenancy data model and middleware", "body": "### Summary\nDeliver Design tenancy data model and middleware for Multi-tenant (organization/brand) ticket scoping to meet the documented requirements.\n\n### Scope\n- [ ] Diagram shows organization, brand, and ticket relationships with tenancy keys\n- [ ] HTTP middleware strategy documented for resolving tenant from domain and auth context\n- [ ] Risk assessment covers cross-tenant isolation and data leakage mitigations\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Design,priority:P0,area:Ticketing", "milestone": "Week 1"}, {"id": "E1-F2-I2", "title": "E1-F2-I2: Implement tenant resolution middleware", "body": "### Summary\nDeliver Implement tenant resolution middleware for Multi-tenant (organization/brand) ticket scoping to meet the documented requirements.\n\n### Scope\n- [ ] Middleware sets current tenant in service container based on domain or JWT claims\n- [ ] Requests without tenant context return standardized 404/401 responses\n- [ ] Unit tests cover domain-based and header-based resolution paths\n- [ ] Dependencies: E1-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F2-I3", "title": "E1-F2-I3: Configure tenant-aware seeds and settings", "body": "### Summary\nDeliver Configure tenant-aware seeds and settings for Multi-tenant (organization/brand) ticket scoping to meet the documented requirements.\n\n### Scope\n- [ ] Database seeders provision demo organizations, brands, and default queues isolated per tenant\n- [ ] Config cache distinguishes tenant-specific email/SLA settings\n- [ ] Documentation explains how to add new tenants via artisan command\n- [ ] Dependencies: E1-F2-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P1,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F3-I1", "title": "E1-F3-I1: Establish ticket schema and migrations", "body": "### Summary\nDeliver Establish ticket schema and migrations for Ticket fields (subject, status, priority, department, category, assignee, tags, custom fields) to meet the documented requirements.\n\n### Scope\n- [ ] Migration creates tickets table with required fields and tenant foreign keys\n- [ ] Supporting tables for tags, categories, departments, and custom field definitions exist with constraints\n- [ ] ERD updated to reflect relationships and shared with team\n- [ ] Dependencies: E1-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 1"}, {"id": "E1-F3-I2", "title": "E1-F3-I2: Build CRUD services for core ticket fields", "body": "### Summary\nDeliver Build CRUD services for core ticket fields for Ticket fields (subject, status, priority, department, category, assignee, tags, custom fields) to meet the documented requirements.\n\n### Scope\n- [ ] Ticket repository/service layer supports create/update with validation for subject, priority, department, and assignee\n- [ ] Tags and categories persist via sync operations with audit logging\n- [ ] Feature tests cover create, update, and validation error scenarios\n- [ ] Dependencies: E1-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F3-I3", "title": "E1-F3-I3: Implement custom fields storage layer", "body": "### Summary\nDeliver Implement custom fields storage layer for Ticket fields (subject, status, priority, department, category, assignee, tags, custom fields) to meet the documented requirements.\n\n### Scope\n- [ ] Polymorphic or JSON column stores arbitrary custom fields with type metadata\n- [ ] Admin API allows registering new custom fields with validation rules\n- [ ] Custom field values retrievable via API responses and portal views\n- [ ] Dependencies: E1-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P1,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F4-I1", "title": "E1-F4-I1: Design workflow configuration model", "body": "### Summary\nDeliver Design workflow configuration model for Configurable custom statuses & workflows to meet the documented requirements.\n\n### Scope\n- [ ] Workflow state machine documented with allowed transitions and guard hooks\n- [ ] Data model for custom statuses and transitions defined and peer reviewed\n- [ ] Configuration storage strategy (DB vs. config files) approved\n- [ ] Dependencies: E1-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Design,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F4-I2", "title": "E1-F4-I2: Build admin UI for status/workflow management", "body": "### Summary\nDeliver Build admin UI for status/workflow management for Configurable custom statuses & workflows to meet the documented requirements.\n\n### Scope\n- [ ] Filament admin forms create/update/delete statuses and transition rules per tenant\n- [ ] UI enforces unique status names and valid transition targets\n- [ ] Success/error messages localized and follow design system\n- [ ] Dependencies: E1-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Frontend,priority:P1,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F4-I3", "title": "E1-F4-I3: Enforce workflow transitions in ticket service", "body": "### Summary\nDeliver Enforce workflow transitions in ticket service for Configurable custom statuses & workflows to meet the documented requirements.\n\n### Scope\n- [ ] Service layer prevents illegal status changes and logs transition events\n- [ ] Automated tests cover allowed/denied transitions and custom workflow hooks\n- [ ] SLA timers triggered on entry to configured statuses\n- [ ] Dependencies: E1-F4-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F5-I1", "title": "E1-F5-I1: Extend ticket messages schema for visibility", "body": "### Summary\nDeliver Extend ticket messages schema for visibility for Internal notes vs. public replies to meet the documented requirements.\n\n### Scope\n- [ ] Messages table differentiates internal notes and public replies with visibility flag and author role\n- [ ] Migration preserves existing data with default visibility of public\n- [ ] Repository filters exclude internal notes from customer portal queries\n- [ ] Dependencies: E1-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F5-I2", "title": "E1-F5-I2: Implement agent UI toggle for note visibility", "body": "### Summary\nDeliver Implement agent UI toggle for note visibility for Internal notes vs. public replies to meet the documented requirements.\n\n### Scope\n- [ ] Agent composer provides explicit toggle between internal note and public reply\n- [ ] UI clearly labels internal notes and prevents accidental public posting\n- [ ] Front-end tests cover toggle state persistence on draft replies\n- [ ] Dependencies: E1-F5-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Frontend,priority:P1,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F5-I3", "title": "E1-F5-I3: Scope notifications by message visibility", "body": "### Summary\nDeliver Scope notifications by message visibility for Internal notes vs. public replies to meet the documented requirements.\n\n### Scope\n- [ ] Notification dispatch excludes internal notes from requester emails\n- [ ] Audit log records visibility for each message event\n- [ ] Integration test verifies watchers receive only permitted updates\n- [ ] Dependencies: E1-F5-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P1,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F6-I1", "title": "E1-F6-I1: Model ticket relationship metadata", "body": "### Summary\nDeliver Model ticket relationship metadata for Ticket merge, split, and link/duplicate handling to meet the documented requirements.\n\n### Scope\n- [ ] Schema introduces linkage table capturing merge, split, and duplicate relationships with audit columns\n- [ ] API representation exposes linked ticket references and relation type\n- [ ] Data integrity rules prevent circular merges\n- [ ] Dependencies: E1-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F6-I2", "title": "E1-F6-I2: Implement ticket merge service workflow", "body": "### Summary\nDeliver Implement ticket merge service workflow for Ticket merge, split, and link/duplicate handling to meet the documented requirements.\n\n### Scope\n- [ ] Service merges conversations, tags, and assignee history into target ticket with transaction safety\n- [ ] Notifications emitted to involved agents describing merge outcome\n- [ ] Tests cover merge success and invalid merge attempts\n- [ ] Dependencies: E1-F6-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F6-I3", "title": "E1-F6-I3: Implement ticket split operation", "body": "### Summary\nDeliver Implement ticket split operation for Ticket merge, split, and link/duplicate handling to meet the documented requirements.\n\n### Scope\n- [ ] Split command clones ticket core data and transfers selected messages to new ticket\n- [ ] Original ticket retains reference to split child with audit entries\n- [ ] Validation prevents splitting when criteria not met (e.g., insufficient messages)\n- [ ] Dependencies: E1-F6-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P1,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F6-I4", "title": "E1-F6-I4: Provide UI for linking and duplicate management", "body": "### Summary\nDeliver Provide UI for linking and duplicate management for Ticket merge, split, and link/duplicate handling to meet the documented requirements.\n\n### Scope\n- [ ] Agent console surfaces linked ticket list with relation type badges\n- [ ] UI supports unlinking duplicates with confirmation prompts\n- [ ] Activity log entries generated when links are created or removed\n- [ ] Dependencies: E1-F6-I2, E1-F6-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Frontend,priority:P1,area:Ticketing", "milestone": "Week 4"}, {"id": "E1-F7-I1", "title": "E1-F7-I1: Build bulk selection and action UI", "body": "### Summary\nDeliver Build bulk selection and action UI for Bulk ticket actions (assign, close, tag, SLA updates) to meet the documented requirements.\n\n### Scope\n- [ ] Ticket list allows multi-select with persistent selection state across pagination\n- [ ] Bulk action drawer exposes assign, close, tag, and SLA update options\n- [ ] Accessibility review confirms keyboard navigation for selection/actions\n- [ ] Dependencies: E1-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Frontend,priority:P1,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F7-I2", "title": "E1-F7-I2: Implement bulk action job handlers", "body": "### Summary\nDeliver Implement bulk action job handlers for Bulk ticket actions (assign, close, tag, SLA updates) to meet the documented requirements.\n\n### Scope\n- [ ] Queue jobs process bulk assignments, closures, tags, and SLA rule recalculations with progress tracking\n- [ ] Failure handling rolls back partial updates and records error context\n- [ ] Metrics emitted for bulk job throughput and failures\n- [ ] Dependencies: E1-F7-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F7-I3", "title": "E1-F7-I3: Support SLA adjustments in bulk updates", "body": "### Summary\nDeliver Support SLA adjustments in bulk updates for Bulk ticket actions (assign, close, tag, SLA updates) to meet the documented requirements.\n\n### Scope\n- [ ] Bulk SLA updates recalculate timers respecting workflow status rules\n- [ ] Confirmation summary displays before execution with SLA impact preview\n- [ ] Automated tests ensure SLA changes apply per tenant configuration\n- [ ] Dependencies: E1-F7-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P1,area:Ticketing", "milestone": "Week 4"}, {"id": "E1-F8-I1", "title": "E1-F8-I1: Configure Echo broadcasting stack", "body": "### Summary\nDeliver Configure Echo broadcasting stack for Real-time updates via Echo (Pusher-compatible) to meet the documented requirements.\n\n### Scope\n- [ ] Broadcasting config supports Pusher-compatible drivers with environment toggles\n- [ ] Auth endpoints secured for private and presence channels with tenant scoping\n- [ ] Connection health monitoring documented for Horizon metrics\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:DevOps,priority:P0,area:Ticketing", "milestone": "Week 2"}, {"id": "E1-F8-I2", "title": "E1-F8-I2: Broadcast ticket lifecycle events", "body": "### Summary\nDeliver Broadcast ticket lifecycle events for Real-time updates via Echo (Pusher-compatible) to meet the documented requirements.\n\n### Scope\n- [ ] Events emitted for ticket creation, updates, merges, and assignments with payload normalization\n- [ ] Listeners queue broadcasts without blocking core request cycle\n- [ ] Tests verify event payloads contain tenant and visibility data\n- [ ] Dependencies: E1-F8-I1, E1-F4-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Backend,priority:P0,area:Ticketing", "milestone": "Week 3"}, {"id": "E1-F8-I3", "title": "E1-F8-I3: Implement real-time agent console subscriptions", "body": "### Summary\nDeliver Implement real-time agent console subscriptions for Real-time updates via Echo (Pusher-compatible) to meet the documented requirements.\n\n### Scope\n- [ ] Agent UI subscribes to relevant channels and updates ticket lists and detail views in real time\n- [ ] Offline/reconnect states handled gracefully with toast notifications\n- [ ] Performance budget met (<200ms UI update after event received)\n- [ ] Dependencies: E1-F8-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E1,type:Frontend,priority:P1,area:Ticketing", "milestone": "Week 4"}, {"id": "E2-F1-I1", "title": "E2-F1-I1: Define contact and company schema", "body": "### Summary\nDeliver Define contact and company schema for Contact directory (companies + individuals) to meet the documented requirements.\n\n### Scope\n- [ ] Data model captures companies, individuals, primary contacts, and tenant associations\n- [ ] Migration scripts prepared with indexes for email, domain, and external IDs\n- [ ] Documentation outlines lifecycle hooks for syncing contacts from tickets\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Design,priority:P0,area:Contacts", "milestone": "Week 1"}, {"id": "E2-F1-I2", "title": "E2-F1-I2: Build admin CRUD for contacts and companies", "body": "### Summary\nDeliver Build admin CRUD for contacts and companies for Contact directory (companies + individuals) to meet the documented requirements.\n\n### Scope\n- [ ] Filament admin pages support create/edit/search with company linkage and tags\n- [ ] Validation ensures unique email per tenant and required GDPR consent flags\n- [ ] Feature tests cover create/update/delete paths\n- [ ] Dependencies: E2-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Frontend,priority:P0,area:Contacts", "milestone": "Week 2"}, {"id": "E2-F1-I3", "title": "E2-F1-I3: Expose contact directory in customer portal", "body": "### Summary\nDeliver Expose contact directory in customer portal for Contact directory (companies + individuals) to meet the documented requirements.\n\n### Scope\n- [ ] Portal shows requester\u2019s company roster with search and filtering\n- [ ] Access restricted to authenticated users scoped to their organization\n- [ ] UI displays ticket counts and last activity for each contact\n- [ ] Dependencies: E2-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Frontend,priority:P1,area:Contacts", "milestone": "Week 3"}, {"id": "E2-F2-I1", "title": "E2-F2-I1: Seed core user roles", "body": "### Summary\nDeliver Seed core user roles for User roles \u2013 Admin, Agent, Viewer to meet the documented requirements.\n\n### Scope\n- [ ] Database seeds create Admin, Agent, and Viewer roles per tenant\n- [ ] Role descriptions documented with high-level responsibilities\n- [ ] Migration script idempotent to avoid duplicate role entries\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P0,area:Contacts", "milestone": "Week 1"}, {"id": "E2-F2-I2", "title": "E2-F2-I2: Configure onboarding role assignment", "body": "### Summary\nDeliver Configure onboarding role assignment for User roles \u2013 Admin, Agent, Viewer to meet the documented requirements.\n\n### Scope\n- [ ] User registration/onboarding flow assigns default roles based on invitation type\n- [ ] Admins can adjust roles via Filament UI with audit entry\n- [ ] Tests ensure unauthorized role elevation attempts are blocked\n- [ ] Dependencies: E2-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P1,area:Contacts", "milestone": "Week 2"}, {"id": "E2-F3-I1", "title": "E2-F3-I1: Integrate Spatie permissions package", "body": "### Summary\nDeliver Integrate Spatie permissions package for RBAC via Spatie permissions to meet the documented requirements.\n\n### Scope\n- [ ] Package installed and configured with cache store and guard settings per tenant\n- [ ] Permission syncing respects queued jobs and avoids N+1 queries\n- [ ] Documentation added for artisan commands to manage roles/permissions\n- [ ] Dependencies: E2-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P0,area:Contacts", "milestone": "Week 2"}, {"id": "E2-F3-I2", "title": "E2-F3-I2: Define permission matrix for core modules", "body": "### Summary\nDeliver Define permission matrix for core modules for RBAC via Spatie permissions to meet the documented requirements.\n\n### Scope\n- [ ] Matrix lists CRUD and workflow permissions for tickets, contacts, knowledge base, and reports per role\n- [ ] Approval recorded from security and compliance stakeholders\n- [ ] Permissions seeded with translation keys for UI display\n- [ ] Dependencies: E2-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Design,priority:P1,area:Contacts", "milestone": "Week 2"}, {"id": "E2-F3-I3", "title": "E2-F3-I3: Enforce RBAC middleware across portals", "body": "### Summary\nDeliver Enforce RBAC middleware across portals for RBAC via Spatie permissions to meet the documented requirements.\n\n### Scope\n- [ ] Middleware gates admin and customer routes using Spatie abilities with tenant awareness\n- [ ] Unauthorized access returns standardized JSON and view responses\n- [ ] Automated tests verify role-based access for representative endpoints\n- [ ] Dependencies: E2-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P0,area:Contacts", "milestone": "Week 3"}, {"id": "E2-F4-I1", "title": "E2-F4-I1: Model teams and membership relations", "body": "### Summary\nDeliver Model teams and membership relations for Teams & team assignments to meet the documented requirements.\n\n### Scope\n- [ ] Schema captures teams, memberships, default queues, and tenant ownership\n- [ ] Pivot table enforces unique user-team pairs with role metadata\n- [ ] Seeder creates sample tiered teams for testing\n- [ ] Dependencies: E2-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P0,area:Contacts", "milestone": "Week 2"}, {"id": "E2-F4-I2", "title": "E2-F4-I2: Build team assignment UI for tickets", "body": "### Summary\nDeliver Build team assignment UI for tickets for Teams & team assignments to meet the documented requirements.\n\n### Scope\n- [ ] Agent console provides dropdown to assign tickets to teams with search\n- [ ] Assignment updates trigger audit log entries and notifications\n- [ ] Validation ensures user belongs to assigned team before self-assignment\n- [ ] Dependencies: E2-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Frontend,priority:P1,area:Contacts", "milestone": "Week 3"}, {"id": "E2-F4-I3", "title": "E2-F4-I3: Implement auto-assignment rules engine", "body": "### Summary\nDeliver Implement auto-assignment rules engine for Teams & team assignments to meet the documented requirements.\n\n### Scope\n- [ ] Rules assign incoming tickets to teams based on department, category, or channel\n- [ ] Admin UI allows enabling/disabling rules per tenant with priority ordering\n- [ ] Tests verify deterministic assignment results for sample scenarios\n- [ ] Dependencies: E2-F4-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P1,area:Contacts", "milestone": "Week 4"}, {"id": "E2-F5-I1", "title": "E2-F5-I1: Create watcher relationship model", "body": "### Summary\nDeliver Create watcher relationship model for Watchers/observers on tickets to meet the documented requirements.\n\n### Scope\n- [ ] Watcher pivot table links users/contacts to tickets with notification preferences\n- [ ] APIs to add/remove watchers respect RBAC and tenant boundaries\n- [ ] Migration ensures historical watchers preserved during schema changes\n- [ ] Dependencies: E2-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P1,area:Contacts", "milestone": "Week 2"}, {"id": "E2-F5-I2", "title": "E2-F5-I2: Manage watcher notification preferences", "body": "### Summary\nDeliver Manage watcher notification preferences for Watchers/observers on tickets to meet the documented requirements.\n\n### Scope\n- [ ] User settings page toggles email, portal, and real-time alerts per ticket\n- [ ] Preference changes persist and display confirmation state\n- [ ] Tests ensure internal notes respect watcher opt-in rules\n- [ ] Dependencies: E2-F5-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Frontend,priority:P1,area:Contacts", "milestone": "Week 3"}, {"id": "E2-F5-I3", "title": "E2-F5-I3: Display watchers in ticket detail views", "body": "### Summary\nDeliver Display watchers in ticket detail views for Watchers/observers on tickets to meet the documented requirements.\n\n### Scope\n- [ ] Agent and portal ticket views show watcher list with avatars and roles\n- [ ] UI permits quick add/remove for users with permissions\n- [ ] Visibility limited to authorized viewers per RBAC rules\n- [ ] Dependencies: E2-F5-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Frontend,priority:P2,area:Contacts", "milestone": "Week 4"}, {"id": "E2-F6-I1", "title": "E2-F6-I1: Select audit logging framework", "body": "### Summary\nDeliver Select audit logging framework for Activity/audit logs per organization to meet the documented requirements.\n\n### Scope\n- [ ] Decision document compares Laravel Auditing vs. custom implementation with pros/cons\n- [ ] Chosen approach includes retention policy and storage sizing estimates\n- [ ] Security review signs off on log data elements\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Design,priority:P1,area:Contacts", "milestone": "Week 2"}, {"id": "E2-F6-I2", "title": "E2-F6-I2: Implement ticket and contact audit writers", "body": "### Summary\nDeliver Implement ticket and contact audit writers for Activity/audit logs per organization to meet the documented requirements.\n\n### Scope\n- [ ] Create/update/delete actions for tickets and contacts emit audit entries with actor, tenant, and diff\n- [ ] Sensitive field changes masked according to compliance policy\n- [ ] Unit tests cover logging for representative models\n- [ ] Dependencies: E2-F6-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P0,area:Contacts", "milestone": "Week 3"}, {"id": "E2-F6-I3", "title": "E2-F6-I3: Build audit log viewer per organization", "body": "### Summary\nDeliver Build audit log viewer per organization for Activity/audit logs per organization to meet the documented requirements.\n\n### Scope\n- [ ] Admin portal page lists audit events with filters by actor, object, and date range\n- [ ] Export button provides CSV of filtered results respecting permissions\n- [ ] Pagination and search meet performance thresholds on seeded dataset\n- [ ] Dependencies: E2-F6-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Frontend,priority:P1,area:Contacts", "milestone": "Week 4"}, {"id": "E2-F7-I1", "title": "E2-F7-I1: Document GDPR anonymization policy", "body": "### Summary\nDeliver Document GDPR anonymization policy for GDPR compliance \u2013 anonymize/delete contact & ticket data to meet the documented requirements.\n\n### Scope\n- [ ] Policy defines fields to anonymize vs. delete for contacts and tickets\n- [ ] Legal/compliance stakeholders approve documented retention timelines\n- [ ] Procedures for handling subject access requests outlined and stored centrally\n- [ ] Dependencies: E2-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Design,priority:P0,area:Compliance", "milestone": "Week 2"}, {"id": "E2-F7-I2", "title": "E2-F7-I2: Implement contact anonymization job", "body": "### Summary\nDeliver Implement contact anonymization job for GDPR compliance \u2013 anonymize/delete contact & ticket data to meet the documented requirements.\n\n### Scope\n- [ ] Queue job scrubs personal identifiers, replaces with pseudonyms, and updates linked tickets\n- [ ] Job records audit entry with reason and requester details\n- [ ] Tests confirm anonymization respects tenant boundaries and retains metrics\n- [ ] Dependencies: E2-F7-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P0,area:Compliance", "milestone": "Week 3"}, {"id": "E2-F7-I3", "title": "E2-F7-I3: Build ticket deletion and redaction workflow", "body": "### Summary\nDeliver Build ticket deletion and redaction workflow for GDPR compliance \u2013 anonymize/delete contact & ticket data to meet the documented requirements.\n\n### Scope\n- [ ] Workflow queues purge of ticket content while preserving statistical aggregates\n- [ ] Approval step required before final deletion with reversible hold period\n- [ ] Integration tests simulate request lifecycle from initiation to completion\n- [ ] Dependencies: E2-F7-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P0,area:Compliance", "milestone": "Week 3"}, {"id": "E2-F7-I4", "title": "E2-F7-I4: Log and report GDPR actions", "body": "### Summary\nDeliver Log and report GDPR actions for GDPR compliance \u2013 anonymize/delete contact & ticket data to meet the documented requirements.\n\n### Scope\n- [ ] GDPR operations recorded in dedicated log with actor, timestamp, and scope\n- [ ] Monthly export command generates compliance report CSV per tenant\n- [ ] Alerts raised on failed anonymization/deletion attempts via monitoring channel\n- [ ] Dependencies: E2-F7-I3, E2-F6-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E2,type:Backend,priority:P1,area:Compliance", "milestone": "Week 4"}, {"id": "E3-F1-I1", "title": "E3-F1-I1: Design hierarchical knowledge base schema", "body": "### Summary\nDeliver Design hierarchical knowledge base schema for Category \u2192 Article hierarchy to meet the documented requirements.\n\n### Scope\n- [ ] ERD documents category tree, article relations, and tenant scoping fields\n- [ ] Review sign-off recorded from product and backend leads\n- [ ] Versioned design artifact stored in shared repository\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Design,priority:P0,area:KnowledgeBase", "milestone": "Week 1"}, {"id": "E3-F1-I2", "title": "E3-F1-I2: Implement category and article migrations", "body": "### Summary\nDeliver Implement category and article migrations for Category \u2192 Article hierarchy to meet the documented requirements.\n\n### Scope\n- [ ] Migrations create categories, articles, and pivot tables with nested set or adjacency metadata\n- [ ] Seeder provisions sample hierarchy per tenant for QA\n- [ ] Automated tests cover parent/child integrity and cascading deletes\n- [ ] Dependencies: E3-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Backend,priority:P0,area:KnowledgeBase", "milestone": "Week 1"}, {"id": "E3-F1-I3", "title": "E3-F1-I3: Build admin tree management UI", "body": "### Summary\nDeliver Build admin tree management UI for Category \u2192 Article hierarchy to meet the documented requirements.\n\n### Scope\n- [ ] Filament UI lists categories with drag-and-drop reordering and depth indicators\n- [ ] Create/edit forms validate unique names per level and slug placeholders\n- [ ] Permission checks ensure only authorized roles modify hierarchy\n- [ ] Dependencies: E3-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Frontend,priority:P1,area:KnowledgeBase", "milestone": "Week 2"}, {"id": "E3-F2-I1", "title": "E3-F2-I1: Evaluate and select WYSIWYG component", "body": "### Summary\nDeliver Evaluate and select WYSIWYG component for WYSIWYG editor for KB articles to meet the documented requirements.\n\n### Scope\n- [ ] Comparison matrix covers Tiptap, CKEditor, and Quill with accessibility and licensing notes\n- [ ] Decision recorded with required plugins/extensions list\n- [ ] Security review confirms HTML sanitization strategy\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Design,priority:P1,area:KnowledgeBase", "milestone": "Week 1"}, {"id": "E3-F2-I2", "title": "E3-F2-I2: Integrate editor into article authoring UI", "body": "### Summary\nDeliver Integrate editor into article authoring UI for WYSIWYG editor for KB articles to meet the documented requirements.\n\n### Scope\n- [ ] Admin article form renders rich text editor with image/file upload controls\n- [ ] Draft autosave implemented using existing Filament patterns\n- [ ] Cypress/UI tests validate formatting toolbar behaviors\n- [ ] Dependencies: E3-F2-I1, E3-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Frontend,priority:P0,area:KnowledgeBase", "milestone": "Week 2"}, {"id": "E3-F2-I3", "title": "E3-F2-I3: Harden article content sanitization pipeline", "body": "### Summary\nDeliver Harden article content sanitization pipeline for WYSIWYG editor for KB articles to meet the documented requirements.\n\n### Scope\n- [ ] Backend sanitizes submitted HTML against configured allowlist before persistence\n- [ ] Stored content passes security regression suite for XSS injection attempts\n- [ ] Sanitization failures emit audit log entries with redacted payload excerpts\n- [ ] Dependencies: E3-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Backend,priority:P0,area:KnowledgeBase", "milestone": "Week 2"}, {"id": "E3-F3-I1", "title": "E3-F3-I1: Define slug generation and routing strategy", "body": "### Summary\nDeliver Define slug generation and routing strategy for SEO-friendly slugs to meet the documented requirements.\n\n### Scope\n- [ ] Specification covers slug format, uniqueness per locale, and redirect handling\n- [ ] Route blueprint includes tenant-aware prefixes and cache keys\n- [ ] Approval captured from marketing stakeholder\n- [ ] Dependencies: E3-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Design,priority:P1,area:KnowledgeBase", "milestone": "Week 1"}, {"id": "E3-F3-I2", "title": "E3-F3-I2: Implement slug generation services", "body": "### Summary\nDeliver Implement slug generation services for SEO-friendly slugs to meet the documented requirements.\n\n### Scope\n- [ ] Slugs auto-generate on create/update with manual override capability\n- [ ] Slug history table maintains redirects for changed titles\n- [ ] Unit tests cover collision resolution and locale-specific characters\n- [ ] Dependencies: E3-F3-I1, E3-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Backend,priority:P1,area:KnowledgeBase", "milestone": "Week 2"}, {"id": "E3-F3-I3", "title": "E3-F3-I3: Expose SEO metadata controls", "body": "### Summary\nDeliver Expose SEO metadata controls for SEO-friendly slugs to meet the documented requirements.\n\n### Scope\n- [ ] Admin UI captures meta title, description, and canonical URL per article\n- [ ] Portal head tags render stored metadata with default fallbacks\n- [ ] Preview panel shows SERP-style snippet for editors\n- [ ] Dependencies: E3-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Frontend,priority:P2,area:KnowledgeBase", "milestone": "Week 3"}, {"id": "E3-F4-I1", "title": "E3-F4-I1: Model feedback vote storage", "body": "### Summary\nDeliver Model feedback vote storage for Feedback voting (\u201cWas this helpful?\u201d) to meet the documented requirements.\n\n### Scope\n- [ ] Table stores tenant, article, user/contact, vote value, and timestamp\n- [ ] Rate limiting prevents duplicate votes within configurable window\n- [ ] Migration includes backfill script for legacy feedback if present\n- [ ] Dependencies: E3-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Backend,priority:P1,area:KnowledgeBase", "milestone": "Week 2"}, {"id": "E3-F4-I2", "title": "E3-F4-I2: Implement feedback API endpoints", "body": "### Summary\nDeliver Implement feedback API endpoints for Feedback voting (\u201cWas this helpful?\u201d) to meet the documented requirements.\n\n### Scope\n- [ ] Public endpoints accept vote submissions with CSRF protection and auth fallback\n- [ ] Response payload returns updated helpfulness counts and status\n- [ ] Feature tests cover anonymous vs. authenticated submissions\n- [ ] Dependencies: E3-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Backend,priority:P1,area:KnowledgeBase", "milestone": "Week 2"}, {"id": "E3-F4-I3", "title": "E3-F4-I3: Add portal voting UI and analytics widget", "body": "### Summary\nDeliver Add portal voting UI and analytics widget for Feedback voting (\u201cWas this helpful?\u201d) to meet the documented requirements.\n\n### Scope\n- [ ] Article page shows \u201cHelpful / Not Helpful\u201d buttons with instant feedback states\n- [ ] Admin dashboard widget visualizes vote trends per article\n- [ ] Accessibility review confirms keyboard and screen reader support\n- [ ] Dependencies: E3-F4-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Frontend,priority:P1,area:KnowledgeBase", "milestone": "Week 3"}, {"id": "E3-F5-I1", "title": "E3-F5-I1: Decide localization model and fallback policy", "body": "### Summary\nDeliver Decide localization model and fallback policy for Multilingual articles to meet the documented requirements.\n\n### Scope\n- [ ] Document compares single-table JSON translations vs. per-locale tables\n- [ ] Fallback resolution order agreed with product and localization teams\n- [ ] Glossary of supported locales and locale codes published\n- [ ] Dependencies: E3-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Design,priority:P0,area:KnowledgeBase", "milestone": "Week 1"}, {"id": "E3-F5-I2", "title": "E3-F5-I2: Implement multilingual storage layer", "body": "### Summary\nDeliver Implement multilingual storage layer for Multilingual articles to meet the documented requirements.\n\n### Scope\n- [ ] Schema persists article translations with language codes and status flags\n- [ ] Repository returns localized content with fallback per policy\n- [ ] Tests cover creation, update, and deletion of localized variants\n- [ ] Dependencies: E3-F5-I1, E3-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Backend,priority:P0,area:KnowledgeBase", "milestone": "Week 2"}, {"id": "E3-F5-I3", "title": "E3-F5-I3: Provide translation workflow UI", "body": "### Summary\nDeliver Provide translation workflow UI for Multilingual articles to meet the documented requirements.\n\n### Scope\n- [ ] Admin interface lists locales with status chips and translation progress\n- [ ] Editors can duplicate base language into target locale for editing\n- [ ] Notification sent to assigned translators when new locale requested\n- [ ] Dependencies: E3-F5-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Frontend,priority:P1,area:KnowledgeBase", "milestone": "Week 3"}, {"id": "E3-F6-I1", "title": "E3-F6-I1: Configure Meilisearch infrastructure", "body": "### Summary\nDeliver Configure Meilisearch infrastructure for Searchable knowledge base (Scout + Meilisearch) to meet the documented requirements.\n\n### Scope\n- [ ] Environment configuration templates include Meilisearch host, keys, and health checks\n- [ ] Deployment runbook documents provisioning and backup strategy\n- [ ] Monitoring alerts defined for index sync lag and uptime\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:DevOps,priority:P0,area:KnowledgeBase", "milestone": "Week 2"}, {"id": "E3-F6-I2", "title": "E3-F6-I2: Implement Scout indexing pipeline", "body": "### Summary\nDeliver Implement Scout indexing pipeline for Searchable knowledge base (Scout + Meilisearch) to meet the documented requirements.\n\n### Scope\n- [ ] Articles indexed with locale, category, and tenant filters\n- [ ] Queue worker handles incremental updates and deletions with retry policy\n- [ ] Automated tests verify index documents for translated content\n- [ ] Dependencies: E3-F6-I1, E3-F5-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Backend,priority:P0,area:KnowledgeBase", "milestone": "Week 3"}, {"id": "E3-F6-I3", "title": "E3-F6-I3: Deliver portal search UI and autosuggest", "body": "### Summary\nDeliver Deliver portal search UI and autosuggest for Searchable knowledge base (Scout + Meilisearch) to meet the documented requirements.\n\n### Scope\n- [ ] Portal search bar provides instant results with highlighted snippets\n- [ ] Filters support locale, category, and article type selections\n- [ ] Analytics event logged for search queries and zero-result cases\n- [ ] Dependencies: E3-F6-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E3,type:Frontend,priority:P1,area:KnowledgeBase", "milestone": "Week 3"}, {"id": "E4-F1-I1", "title": "E4-F1-I1: Author automation DSL specification", "body": "### Summary\nDeliver Author automation DSL specification for Event-based automation rules (ticket.created, message.sent) to meet the documented requirements.\n\n### Scope\n- [ ] Specification defines triggers, conditions, and actions with JSON schema\n- [ ] Sample rules documented for ticket.created and message.sent events\n- [ ] Governance checklist covers performance limits and recursion prevention\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Design,priority:P0,area:Automation", "milestone": "Week 1"}, {"id": "E4-F1-I2", "title": "E4-F1-I2: Implement automation rule executor", "body": "### Summary\nDeliver Implement automation rule executor for Event-based automation rules (ticket.created, message.sent) to meet the documented requirements.\n\n### Scope\n- [ ] Engine processes queued events and evaluates rules with tenant isolation\n- [ ] Actions support notifications, field updates, and macro invocation hooks\n- [ ] Unit tests cover rule evaluation order and error handling\n- [ ] Dependencies: E4-F1-I1, E1-F8-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Backend,priority:P0,area:Automation", "milestone": "Week 2"}, {"id": "E4-F1-I3", "title": "E4-F1-I3: Build rule management UI", "body": "### Summary\nDeliver Build rule management UI for Event-based automation rules (ticket.created, message.sent) to meet the documented requirements.\n\n### Scope\n- [ ] Admin UI lists rules with enable/disable toggles and execution counters\n- [ ] Rule editor provides trigger/condition/action pickers with validation\n- [ ] Activity log entries generated on rule creation or change\n- [ ] Dependencies: E4-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Frontend,priority:P1,area:Automation", "milestone": "Week 3"}, {"id": "E4-F1-I4", "title": "E4-F1-I4: Instrument automation execution logging", "body": "### Summary\nDeliver Instrument automation execution logging for Event-based automation rules (ticket.created, message.sent) to meet the documented requirements.\n\n### Scope\n- [ ] Execution logs store rule ID, event payload snapshot, and outcome status\n- [ ] Monitoring dashboard charts throughput and failures per tenant\n- [ ] Alerting integrates with on-call channel for repeated failures\n- [ ] Dependencies: E4-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Backend,priority:P1,area:Automation", "milestone": "Week 3"}, {"id": "E4-F2-I1", "title": "E4-F2-I1: Model macros and canned responses", "body": "### Summary\nDeliver Model macros and canned responses for Macros & canned responses to meet the documented requirements.\n\n### Scope\n- [ ] Schema stores macro name, content, visibility scope, and placeholder metadata\n- [ ] Seeder loads sample macros per tenant with localization slots\n- [ ] Repository exposes search and category filters for macros\n- [ ] Dependencies: E1-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Backend,priority:P1,area:Automation", "milestone": "Week 1"}, {"id": "E4-F2-I2", "title": "E4-F2-I2: Create admin management interface for macros", "body": "### Summary\nDeliver Create admin management interface for macros for Macros & canned responses to meet the documented requirements.\n\n### Scope\n- [ ] Admin pages support CRUD with preview of placeholder substitutions\n- [ ] Role checks limit macro visibility editing to admins\n- [ ] Form validation enforces unique names per tenant\n- [ ] Dependencies: E4-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Frontend,priority:P1,area:Automation", "milestone": "Week 2"}, {"id": "E4-F2-I3", "title": "E4-F2-I3: Integrate macros into agent composer", "body": "### Summary\nDeliver Integrate macros into agent composer for Macros & canned responses to meet the documented requirements.\n\n### Scope\n- [ ] Agent reply UI exposes searchable macro picker with keyboard shortcuts\n- [ ] Applying macro fills editor with merged content without overwriting attachments\n- [ ] Analytics event tracks macro usage for reporting\n- [ ] Dependencies: E4-F2-I2, E1-F5-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Frontend,priority:P0,area:Automation", "milestone": "Week 3"}, {"id": "E4-F3-I1", "title": "E4-F3-I1: Document SLA policy configuration", "body": "### Summary\nDeliver Document SLA policy configuration for SLA definitions (first response, resolution times) to meet the documented requirements.\n\n### Scope\n- [ ] Policy blueprint defines metrics, calendars, and business hour handling\n- [ ] Approval captured from support leadership on default targets\n- [ ] Data contract specifies storage for thresholds and grace periods\n- [ ] Dependencies: E1-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Design,priority:P0,area:Sla", "milestone": "Week 1"}, {"id": "E4-F3-I2", "title": "E4-F3-I2: Implement SLA configuration models and timers", "body": "### Summary\nDeliver Implement SLA configuration models and timers for SLA definitions (first response, resolution times) to meet the documented requirements.\n\n### Scope\n- [ ] Models persist SLA policies per tenant with channel/priority overrides\n- [ ] Timer service calculates first response/resolution deadlines on ticket events\n- [ ] Test suite validates calculations across timezone and holiday scenarios\n- [ ] Dependencies: E4-F3-I1, E1-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Backend,priority:P0,area:Sla", "milestone": "Week 2"}, {"id": "E4-F3-I3", "title": "E4-F3-I3: Provide SLA admin UI", "body": "### Summary\nDeliver Provide SLA admin UI for SLA definitions (first response, resolution times) to meet the documented requirements.\n\n### Scope\n- [ ] Admin form manages SLA calendars, targets, and escalation contacts\n- [ ] Preview panel shows sample ticket deadlines before saving\n- [ ] Change history captured with user and timestamp metadata\n- [ ] Dependencies: E4-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Frontend,priority:P1,area:Sla", "milestone": "Week 3"}, {"id": "E4-F4-I1", "title": "E4-F4-I1: Schedule SLA breach evaluation worker", "body": "### Summary\nDeliver Schedule SLA breach evaluation worker for SLA breach detection & alerts to meet the documented requirements.\n\n### Scope\n- [ ] Horizon job scans upcoming deadlines and flags breaches with configurable cadence\n- [ ] Job skips paused tickets and workflow statuses marked as stopped\n- [ ] Metrics emitted for processed vs. breached counts\n- [ ] Dependencies: E4-F3-I2, E1-F7-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Backend,priority:P0,area:Sla", "milestone": "Week 3"}, {"id": "E4-F4-I2", "title": "E4-F4-I2: Dispatch breach notifications", "body": "### Summary\nDeliver Dispatch breach notifications for SLA breach detection & alerts to meet the documented requirements.\n\n### Scope\n- [ ] Notifications route to assigned agents, teams, and escalation contacts per SLA\n- [ ] Templates include ticket details, deadline delta, and action links\n- [ ] Tests verify notifications suppressed for tickets already resolved\n- [ ] Dependencies: E4-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Backend,priority:P1,area:Sla", "milestone": "Week 3"}, {"id": "E4-F4-I3", "title": "E4-F4-I3: Surface SLA breach dashboards", "body": "### Summary\nDeliver Surface SLA breach dashboards for SLA breach detection & alerts to meet the documented requirements.\n\n### Scope\n- [ ] Admin dashboard widget charts breaches by queue and priority\n- [ ] Filters allow date range and tenant scoping with export to CSV\n- [ ] Dashboard auto-refreshes using Echo channel for new breaches\n- [ ] Dependencies: E4-F4-I2, E1-F8-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Frontend,priority:P1,area:Sla", "milestone": "Week 4"}, {"id": "E4-F5-I1", "title": "E4-F5-I1: Design escalation workflow schema", "body": "### Summary\nDeliver Design escalation workflow schema for Escalation rules to meet the documented requirements.\n\n### Scope\n- [ ] Workflow diagram maps multi-step escalations, triggers, and cooldowns\n- [ ] Data model proposal covers escalation targets, channels, and conditions\n- [ ] Compliance review confirms audit requirements for escalations\n- [ ] Dependencies: E4-F1-I1, E4-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Design,priority:P1,area:Sla", "milestone": "Week 2"}, {"id": "E4-F5-I2", "title": "E4-F5-I2: Implement escalation engine", "body": "### Summary\nDeliver Implement escalation engine for Escalation rules to meet the documented requirements.\n\n### Scope\n- [ ] Engine listens to SLA breach and automation events to enqueue escalations\n- [ ] Supports sequential steps with configurable delays and reassignment actions\n- [ ] Tests validate escalation cancellation when tickets resolved\n- [ ] Dependencies: E4-F5-I1, E4-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Backend,priority:P0,area:Sla", "milestone": "Week 3"}, {"id": "E4-F5-I3", "title": "E4-F5-I3: Build escalation configuration UI", "body": "### Summary\nDeliver Build escalation configuration UI for Escalation rules to meet the documented requirements.\n\n### Scope\n- [ ] Admin UI allows defining multi-step escalation paths with preview timeline\n- [ ] Validation ensures no circular escalation targets and SLA alignment\n- [ ] Change confirmation modal summarizes impacts before activation\n- [ ] Dependencies: E4-F5-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E4,type:Frontend,priority:P1,area:Sla", "milestone": "Week 4"}, {"id": "E5-F1-I1", "title": "E5-F1-I1: Evaluate summarization provider and privacy controls", "body": "### Summary\nDeliver Evaluate summarization provider and privacy controls for AI-powered ticket summarization to meet the documented requirements.\n\n### Scope\n- [ ] Comparison of OpenAI, Azure, and on-prem LLM options with latency/cost\n- [ ] Data handling assessment documents PII redaction and retention policies\n- [ ] Decision log approved by security and legal stakeholders\n- [ ] Dependencies: E1-F5-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Design,priority:P1,area:Ai", "milestone": "Week 2"}, {"id": "E5-F1-I2", "title": "E5-F1-I2: Implement summarization job pipeline", "body": "### Summary\nDeliver Implement summarization job pipeline for AI-powered ticket summarization to meet the documented requirements.\n\n### Scope\n- [ ] Queue worker assembles conversation context and submits to chosen provider\n- [ ] Summaries cached per ticket with invalidation on new public replies\n- [ ] Error handling retries transient failures and records fallbacks\n- [ ] Dependencies: E5-F1-I1, E1-F8-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Backend,priority:P0,area:Ai", "milestone": "Week 3"}, {"id": "E5-F1-I3", "title": "E5-F1-I3: Display summaries in agent interface", "body": "### Summary\nDeliver Display summaries in agent interface for AI-powered ticket summarization to meet the documented requirements.\n\n### Scope\n- [ ] Agent ticket view shows latest summary with timestamp and refresh action\n- [ ] Loading/error states surfaced with inline toasts\n- [ ] Usage analytics event logged when agents copy or refresh summary\n- [ ] Dependencies: E5-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Frontend,priority:P1,area:Ai", "milestone": "Week 3"}, {"id": "E5-F2-I1", "title": "E5-F2-I1: Define suggested reply prompt templates", "body": "### Summary\nDeliver Define suggested reply prompt templates for Suggested replies (NLP) to meet the documented requirements.\n\n### Scope\n- [ ] Prompt library includes tone options and supported languages\n- [ ] Guardrails documented for sensitive content filtering\n- [ ] Stakeholder review confirms default tone per brand\n- [ ] Dependencies: E5-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Design,priority:P1,area:Ai", "milestone": "Week 2"}, {"id": "E5-F2-I2", "title": "E5-F2-I2: Develop reply suggestion service", "body": "### Summary\nDeliver Develop reply suggestion service for Suggested replies (NLP) to meet the documented requirements.\n\n### Scope\n- [ ] Service generates top-three reply options with confidence scores\n- [ ] Responses cached per ticket message for configurable duration\n- [ ] Unit tests mock provider responses and validate fallback messaging\n- [ ] Dependencies: E5-F2-I1, E5-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Backend,priority:P0,area:Ai", "milestone": "Week 3"}, {"id": "E5-F2-I3", "title": "E5-F2-I3: Integrate suggestions into composer UI", "body": "### Summary\nDeliver Integrate suggestions into composer UI for Suggested replies (NLP) to meet the documented requirements.\n\n### Scope\n- [ ] Agent composer displays suggestions with insert/apply buttons\n- [ ] Feedback buttons collect agent ratings to improve prompts\n- [ ] Accessibility testing ensures screen reader labels for suggestion controls\n- [ ] Dependencies: E5-F2-I2, E1-F5-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Frontend,priority:P0,area:Ai", "milestone": "Week 3"}, {"id": "E5-F3-I1", "title": "E5-F3-I1: Select sentiment analysis approach", "body": "### Summary\nDeliver Select sentiment analysis approach for Sentiment detection to meet the documented requirements.\n\n### Scope\n- [ ] Vendor evaluation covers API accuracy, latency, and cost\n- [ ] Threshold definitions for positive/neutral/negative documented\n- [ ] Compliance review ensures data residency obligations satisfied\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Design,priority:P1,area:Ai", "milestone": "Week 2"}, {"id": "E5-F3-I2", "title": "E5-F3-I2: Process ticket messages for sentiment scores", "body": "### Summary\nDeliver Process ticket messages for sentiment scores for Sentiment detection to meet the documented requirements.\n\n### Scope\n- [ ] Ingestion pipeline annotates incoming/outgoing messages with sentiment metadata\n- [ ] Scores stored with historical trend for each ticket\n- [ ] Tests confirm handling of multilingual content and provider fallbacks\n- [ ] Dependencies: E5-F3-I1, E1-F5-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Backend,priority:P0,area:Ai", "milestone": "Week 3"}, {"id": "E5-F3-I3", "title": "E5-F3-I3: Visualize sentiment in agent views", "body": "### Summary\nDeliver Visualize sentiment in agent views for Sentiment detection to meet the documented requirements.\n\n### Scope\n- [ ] Ticket list shows sentiment badges with tooltips explaining score\n- [ ] Detail view charts sentiment trend over conversation timeline\n- [ ] Real-time updates refresh sentiment when new messages arrive\n- [ ] Dependencies: E5-F3-I2, E1-F8-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Frontend,priority:P1,area:Ai", "milestone": "Week 4"}, {"id": "E5-F4-I1", "title": "E5-F4-I1: Define classification taxonomy and training dataset", "body": "### Summary\nDeliver Define classification taxonomy and training dataset for Auto-tagging & classification to meet the documented requirements.\n\n### Scope\n- [ ] Taxonomy aligns with departments, categories, and SLA priorities\n- [ ] Labeling guide created for human feedback loop with sample tickets\n- [ ] Dataset sourcing plan documented with anonymization steps\n- [ ] Dependencies: E1-F3-I1, E5-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Design,priority:P1,area:Ai", "milestone": "Week 2"}, {"id": "E5-F4-I2", "title": "E5-F4-I2: Implement classification engine", "body": "### Summary\nDeliver Implement classification engine for Auto-tagging & classification to meet the documented requirements.\n\n### Scope\n- [ ] Engine assigns tags on ticket creation and message updates with confidence scoring\n- [ ] Low-confidence outputs queued for manual review workflow\n- [ ] Tests validate mapping updates without duplicate tags\n- [ ] Dependencies: E5-F4-I1, E5-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Backend,priority:P0,area:Ai", "milestone": "Week 3"}, {"id": "E5-F4-I3", "title": "E5-F4-I3: Build feedback and retraining loop", "body": "### Summary\nDeliver Build feedback and retraining loop for Auto-tagging & classification to meet the documented requirements.\n\n### Scope\n- [ ] Agents can approve or reject AI-assigned tags with reason codes\n- [ ] Feedback stored for periodic retraining exports\n- [ ] Monitoring dashboard tracks precision/recall metrics over time\n- [ ] Dependencies: E5-F4-I2, E4-F2-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E5,type:Backend,priority:P1,area:Ai", "milestone": "Week 4"}, {"id": "E6-F1-I1", "title": "E6-F1-I1: Document tenant mailbox intake settings", "body": "### Summary\nDeliver Document tenant mailbox intake settings for IMAP email ingestion to meet the documented requirements.\n\n### Scope\n- [ ] Configuration guide captures per-tenant IMAP host, credential storage, and encryption requirements\n- [ ] Intake limits and polling intervals approved by operations and compliance stakeholders\n- [ ] Runbook stored with escalation contacts for mailbox connection failures\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Design,priority:P0,area:Email", "milestone": "Week 1"}, {"id": "E6-F1-I2", "title": "E6-F1-I2: Implement IMAP polling daemon", "body": "### Summary\nDeliver Implement IMAP polling daemon for IMAP email ingestion to meet the documented requirements.\n\n### Scope\n- [ ] Scheduled command authenticates to tenant mailboxes and enqueues raw messages with tenant context\n- [ ] Idempotency safeguards prevent duplicate ticket drafts for the same Message-ID\n- [ ] Happy-path integration test confirms ingestion to ticket creation pipeline\n- [ ] Dependencies: E6-F1-I1, E1-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Backend,priority:P0,area:Email", "milestone": "Week 2"}, {"id": "E6-F1-I3", "title": "E6-F1-I3: Add attachment and inline image handling", "body": "### Summary\nDeliver Add attachment and inline image handling for IMAP email ingestion to meet the documented requirements.\n\n### Scope\n- [ ] Attachments stored in secure disk with size/type validation and virus scan hook\n- [ ] Inline images rewritten to CDN-safe URLs while preserving original formatting\n- [ ] Error handling logs rejected assets with correlation IDs for support follow-up\n- [ ] Dependencies: E6-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Backend,priority:P1,area:Email", "milestone": "Week 3"}, {"id": "E6-F2-I1", "title": "E6-F2-I1: Set up outbound SMTP provider profiles", "body": "### Summary\nDeliver Set up outbound SMTP provider profiles for SMTP outbound sending to meet the documented requirements.\n\n### Scope\n- [ ] Environment templates capture SMTP host, port, encryption, and credential rotation process\n- [ ] Tenant overrides documented for dedicated IP pools or branded sender domains\n- [ ] Health checks verify connectivity and authentication for staging and production\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:DevOps,priority:P0,area:Email", "milestone": "Week 1"}, {"id": "E6-F2-I2", "title": "E6-F2-I2: Implement queued SMTP dispatcher", "body": "### Summary\nDeliver Implement queued SMTP dispatcher for SMTP outbound sending to meet the documented requirements.\n\n### Scope\n- [ ] Queue job sends messages via configured SMTP transport with retry/backoff strategy\n- [ ] Outbound payload supports attachments, CC/BCC, and reply-to headers mapped from ticket data\n- [ ] Unit tests cover success, transient failure, and permanent failure scenarios\n- [ ] Dependencies: E6-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Backend,priority:P0,area:Email", "milestone": "Week 2"}, {"id": "E6-F2-I3", "title": "E6-F2-I3: Build bounce and delivery status tracking", "body": "### Summary\nDeliver Build bounce and delivery status tracking for SMTP outbound sending to meet the documented requirements.\n\n### Scope\n- [ ] Delivery receipts update ticket timeline with status, timestamp, and diagnostic codes\n- [ ] Bounce classification triggers automation hooks for agent notification\n- [ ] Monitoring panel exposes bounce rates per tenant with alert thresholds\n- [ ] Dependencies: E6-F2-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Backend,priority:P1,area:Email", "milestone": "Week 3"}, {"id": "E6-F3-I1", "title": "E6-F3-I1: Define threading correlation rules", "body": "### Summary\nDeliver Define threading correlation rules for Threaded email \u2194 ticket sync to meet the documented requirements.\n\n### Scope\n- [ ] Specification covers Message-ID, References, and ticket token fallback matching\n- [ ] Edge cases for forwarded/replied messages reviewed with support operations\n- [ ] Documented safeguards prevent cross-tenant thread collisions\n- [ ] Dependencies: E6-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Design,priority:P0,area:Email", "milestone": "Week 1"}, {"id": "E6-F3-I2", "title": "E6-F3-I2: Implement message threading logic", "body": "### Summary\nDeliver Implement message threading logic for Threaded email \u2194 ticket sync to meet the documented requirements.\n\n### Scope\n- [ ] Incoming emails map to existing tickets using correlation rules with logging for mismatches\n- [ ] Outbound replies append proper headers for downstream threading\n- [ ] Automated tests simulate multi-recipient and CC reply flows\n- [ ] Dependencies: E6-F3-I1, E6-F1-I2, E6-F2-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Backend,priority:P0,area:Email", "milestone": "Week 3"}, {"id": "E6-F3-I3", "title": "E6-F3-I3: Sync outbound replies into ticket history", "body": "### Summary\nDeliver Sync outbound replies into ticket history for Threaded email \u2194 ticket sync to meet the documented requirements.\n\n### Scope\n- [ ] Outbound messages persisted with author, visibility, and delivery metadata\n- [ ] Customer replies consolidate into chronological timeline without duplication\n- [ ] Audit trail records threading adjustments with actor attribution\n- [ ] Dependencies: E6-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Backend,priority:P1,area:Email", "milestone": "Week 3"}, {"id": "E6-F4-I1", "title": "E6-F4-I1: Draft email template component library", "body": "### Summary\nDeliver Draft email template component library for Email templates with placeholders to meet the documented requirements.\n\n### Scope\n- [ ] Template inventory lists mandatory transactional messages with branding regions\n- [ ] Placeholder catalogue references ticket, contact, and organization fields with descriptions\n- [ ] Accessibility review ensures default templates meet WCAG email guidance\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Design,priority:P1,area:Email", "milestone": "Week 2"}, {"id": "E6-F4-I2", "title": "E6-F4-I2: Implement template rendering engine", "body": "### Summary\nDeliver Implement template rendering engine for Email templates with placeholders to meet the documented requirements.\n\n### Scope\n- [ ] Rendering service merges placeholders with localization support and HTML/text variants\n- [ ] Preview endpoint returns rendered output with sample data per tenant\n- [ ] Regression tests cover placeholder validation and missing data fallbacks\n- [ ] Dependencies: E6-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Backend,priority:P0,area:Email", "milestone": "Week 3"}, {"id": "E6-F4-I3", "title": "E6-F4-I3: Build template management UI", "body": "### Summary\nDeliver Build template management UI for Email templates with placeholders to meet the documented requirements.\n\n### Scope\n- [ ] Admin UI supports create, clone, edit, and version history for templates\n- [ ] Validation prevents deletion of templates linked to active automations\n- [ ] Change log entries generated for template publish events\n- [ ] Dependencies: E6-F4-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E6,type:Frontend,priority:P1,area:Email", "milestone": "Week 4"}, {"id": "E7-F1-I1", "title": "E7-F1-I1: Define reporting metrics specification", "body": "### Summary\nDeliver Define reporting metrics specification for Ticket volume reports to meet the documented requirements.\n\n### Scope\n- [ ] Metrics spec outlines ticket counts by channel, priority, status, and tenant\n- [ ] Data freshness targets and aggregation windows agreed with stakeholders\n- [ ] Documentation stored with governance notes on retention and privacy\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Design,priority:P0,area:Analytics", "milestone": "Week 1"}, {"id": "E7-F1-I2", "title": "E7-F1-I2: Implement volume aggregation jobs", "body": "### Summary\nDeliver Implement volume aggregation jobs for Ticket volume reports to meet the documented requirements.\n\n### Scope\n- [ ] Nightly and hourly jobs populate summary tables with incremental updates\n- [ ] Failed aggregations retry with alerting on repeated errors\n- [ ] Tests verify counts across sample dataset and tenant isolation\n- [ ] Dependencies: E7-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Backend,priority:P0,area:Analytics", "milestone": "Week 2"}, {"id": "E7-F1-I3", "title": "E7-F1-I3: Build ticket volume dashboards", "body": "### Summary\nDeliver Build ticket volume dashboards for Ticket volume reports to meet the documented requirements.\n\n### Scope\n- [ ] Admin dashboard visualizes trends with filters for channel, priority, and timeframe\n- [ ] Widgets support export to CSV and shareable links respecting permissions\n- [ ] Real-time refresh leverages broadcasting events for new ticket counts\n- [ ] Dependencies: E7-F1-I2, E1-F8-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Frontend,priority:P1,area:Analytics", "milestone": "Week 3"}, {"id": "E7-F2-I1", "title": "E7-F2-I1: Model SLA metrics warehouse tables", "body": "### Summary\nDeliver Model SLA metrics warehouse tables for SLA compliance dashboards to meet the documented requirements.\n\n### Scope\n- [ ] Fact tables store first response and resolution durations keyed by tenant and policy\n- [ ] Historical breaches and acknowledgements preserved for trending\n- [ ] Data dictionary published with column descriptions and calculation notes\n- [ ] Dependencies: E4-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Backend,priority:P1,area:Analytics", "milestone": "Week 2"}, {"id": "E7-F2-I2", "title": "E7-F2-I2: Create SLA compliance dashboard widgets", "body": "### Summary\nDeliver Create SLA compliance dashboard widgets for SLA compliance dashboards to meet the documented requirements.\n\n### Scope\n- [ ] Visualizations display compliance %, breach counts, and aging buckets\n- [ ] Filters allow segmentation by team, priority, and workflow status\n- [ ] Widgets integrate with alert banner when breach rate exceeds threshold\n- [ ] Dependencies: E7-F2-I1, E4-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Frontend,priority:P1,area:Analytics", "milestone": "Week 3"}, {"id": "E7-F2-I3", "title": "E7-F2-I3: Schedule SLA compliance exports", "body": "### Summary\nDeliver Schedule SLA compliance exports for SLA compliance dashboards to meet the documented requirements.\n\n### Scope\n- [ ] Scheduled tasks generate weekly CSV summaries emailed to configured recipients\n- [ ] Export respects tenant branding for headers and footers\n- [ ] Audit log captures export trigger, recipient list, and completion status\n- [ ] Dependencies: E7-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Backend,priority:P2,area:Analytics", "milestone": "Week 4"}, {"id": "E7-F3-I1", "title": "E7-F3-I1: Define productivity KPI catalog", "body": "### Summary\nDeliver Define productivity KPI catalog for Agent productivity metrics to meet the documented requirements.\n\n### Scope\n- [ ] KPI list covers handle time, replies per ticket, backlog ownership, and CSAT linkage\n- [ ] Stakeholders approve calculation formulas and acceptable ranges\n- [ ] Documentation notes data sources and refresh cadence for each KPI\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Design,priority:P1,area:Analytics", "milestone": "Week 1"}, {"id": "E7-F3-I2", "title": "E7-F3-I2: Build agent performance fact table", "body": "### Summary\nDeliver Build agent performance fact table for Agent productivity metrics to meet the documented requirements.\n\n### Scope\n- [ ] ETL aggregates per-agent metrics with calendar-aware working hours\n- [ ] Table indexes optimized for dashboard queries and exports\n- [ ] Tests validate calculations against seeded scenarios for different roles\n- [ ] Dependencies: E7-F3-I1, E1-F7-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Backend,priority:P1,area:Analytics", "milestone": "Week 2"}, {"id": "E7-F3-I3", "title": "E7-F3-I3: Deliver agent scorecard UI", "body": "### Summary\nDeliver Deliver agent scorecard UI for Agent productivity metrics to meet the documented requirements.\n\n### Scope\n- [ ] Scorecard presents KPIs with trend indicators and peer benchmarking\n- [ ] Agents can drill down to ticket lists for each metric with RBAC enforcement\n- [ ] Notifications trigger when KPI thresholds fall below configured targets\n- [ ] Dependencies: E7-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Frontend,priority:P1,area:Analytics", "milestone": "Week 3"}, {"id": "E7-F4-I1", "title": "E7-F4-I1: Standardize export schema definitions", "body": "### Summary\nDeliver Standardize export schema definitions for Exportable reports (CSV, XLSX, PDF) to meet the documented requirements.\n\n### Scope\n- [ ] Schema catalog lists column order, types, and localization rules per report\n- [ ] Data masking requirements approved for sensitive fields\n- [ ] Versioning strategy documented for future schema changes\n- [ ] Dependencies: E7-F1-I1, E7-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Design,priority:P1,area:Analytics", "milestone": "Week 2"}, {"id": "E7-F4-I2", "title": "E7-F4-I2: Implement CSV/XLSX generators", "body": "### Summary\nDeliver Implement CSV/XLSX generators for Exportable reports (CSV, XLSX, PDF) to meet the documented requirements.\n\n### Scope\n- [ ] Export service streams large datasets with pagination and memory limits\n- [ ] XLSX outputs include formatting, totals, and tenant branding\n- [ ] Automated tests compare generated files against golden samples\n- [ ] Dependencies: E7-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Backend,priority:P0,area:Analytics", "milestone": "Week 3"}, {"id": "E7-F4-I3", "title": "E7-F4-I3: Integrate PDF rendering pipeline", "body": "### Summary\nDeliver Integrate PDF rendering pipeline for Exportable reports (CSV, XLSX, PDF) to meet the documented requirements.\n\n### Scope\n- [ ] PDF generation supports scheduled and on-demand exports with queue processing\n- [ ] Layout templates match design system and support localization\n- [ ] Failure cases log diagnostic context and trigger alert notifications\n- [ ] Dependencies: E7-F4-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E7,type:Backend,priority:P1,area:Analytics", "milestone": "Week 4"}, {"id": "E8-F1-I1", "title": "E8-F1-I1: Draft messaging integration blueprint", "body": "### Summary\nDeliver Draft messaging integration blueprint for Slack/MS Teams notifications to meet the documented requirements.\n\n### Scope\n- [ ] Blueprint lists notification triggers, payload schemas, and throttling policy\n- [ ] Security review confirms token storage and rotation approach\n- [ ] Tenant configuration UI requirements captured for downstream implementation\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Design,priority:P1,area:Integrations", "milestone": "Week 1"}, {"id": "E8-F1-I2", "title": "E8-F1-I2: Implement Slack webhook dispatcher", "body": "### Summary\nDeliver Implement Slack webhook dispatcher for Slack/MS Teams notifications to meet the documented requirements.\n\n### Scope\n- [ ] Service posts structured messages with deep links for ticket actions\n- [ ] Retry/backoff handles rate limits and network failures gracefully\n- [ ] Tests validate channel-specific formatting and mention handling\n- [ ] Dependencies: E8-F1-I1, E1-F8-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Backend,priority:P1,area:Integrations", "milestone": "Week 2"}, {"id": "E8-F1-I3", "title": "E8-F1-I3: Deliver Teams connector support", "body": "### Summary\nDeliver Deliver Teams connector support for Slack/MS Teams notifications to meet the documented requirements.\n\n### Scope\n- [ ] Microsoft Teams adapter leverages Graph API for adaptive cards\n- [ ] Tenant-level toggles manage Slack vs. Teams routing preferences\n- [ ] Monitoring captures delivery status and errors per platform\n- [ ] Dependencies: E8-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Backend,priority:P1,area:Integrations", "milestone": "Week 3"}, {"id": "E8-F2-I1", "title": "E8-F2-I1: Define webhook event contract", "body": "### Summary\nDeliver Define webhook event contract for Webhooks (ticket created, status changed) to meet the documented requirements.\n\n### Scope\n- [ ] Contract documents payload schema, headers, retry logic, and security signatures\n- [ ] Event catalogue covers ticket lifecycle, SLA changes, and automation triggers\n- [ ] Stakeholder sign-off recorded with versioning plan\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Design,priority:P0,area:Integrations", "milestone": "Week 1"}, {"id": "E8-F2-I2", "title": "E8-F2-I2: Build webhook delivery service", "body": "### Summary\nDeliver Build webhook delivery service for Webhooks (ticket created, status changed) to meet the documented requirements.\n\n### Scope\n- [ ] Service queues deliveries with exponential backoff and dead-letter handling\n- [ ] HMAC signature validation configurable per tenant secret\n- [ ] Integration tests simulate success, timeout, and 4xx rejection flows\n- [ ] Dependencies: E8-F2-I1, E1-F8-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Backend,priority:P0,area:Integrations", "milestone": "Week 2"}, {"id": "E8-F2-I3", "title": "E8-F2-I3: Provide webhook management UI", "body": "### Summary\nDeliver Provide webhook management UI for Webhooks (ticket created, status changed) to meet the documented requirements.\n\n### Scope\n- [ ] Admin interface allows registering endpoints, selecting events, and viewing logs\n- [ ] Test payload feature sends sample events with real signing\n- [ ] RBAC limits access to tenants with integration permissions\n- [ ] Dependencies: E8-F2-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Frontend,priority:P1,area:Integrations", "milestone": "Week 3"}, {"id": "E8-F3-I1", "title": "E8-F3-I1: Evaluate SSO protocols and vendors", "body": "### Summary\nDeliver Evaluate SSO protocols and vendors for External identity provider (SSO) to meet the documented requirements.\n\n### Scope\n- [ ] Assessment compares SAML, OIDC, and SCIM capabilities with cost and support\n- [ ] Compliance checklist covers data residency, provisioning, and deprovisioning needs\n- [ ] Recommendation approved by security architecture board\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Design,priority:P1,area:Identity", "milestone": "Week 1"}, {"id": "E8-F3-I2", "title": "E8-F3-I2: Implement SAML/OIDC authentication broker", "body": "### Summary\nDeliver Implement SAML/OIDC authentication broker for External identity provider (SSO) to meet the documented requirements.\n\n### Scope\n- [ ] Broker supports tenant-specific metadata, ACS endpoints, and Just-In-Time provisioning\n- [ ] Session handling integrates with existing RBAC middleware\n- [ ] Automated tests cover assertion validation, error states, and logout flows\n- [ ] Dependencies: E8-F3-I1, E2-F3-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Backend,priority:P0,area:Identity", "milestone": "Week 3"}, {"id": "E8-F3-I3", "title": "E8-F3-I3: Configure tenant SSO onboarding UI", "body": "### Summary\nDeliver Configure tenant SSO onboarding UI for External identity provider (SSO) to meet the documented requirements.\n\n### Scope\n- [ ] Admin UI guides setup with metadata upload, attribute mapping, and test login\n- [ ] Validation prevents enabling SSO without default fallback admins\n- [ ] Audit log records configuration changes with before/after snapshots\n- [ ] Dependencies: E8-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Frontend,priority:P1,area:Identity", "milestone": "Week 4"}, {"id": "E8-F4-I1", "title": "E8-F4-I1: Define calendar sync requirements", "body": "### Summary\nDeliver Define calendar sync requirements for Calendar integration for SLA deadlines to meet the documented requirements.\n\n### Scope\n- [ ] Requirements outline supported providers (Google, Outlook) and sync frequency\n- [ ] Mapping of SLA milestones to calendar events reviewed with support leadership\n- [ ] Security evaluation covers token scopes and revocation handling\n- [ ] Dependencies: E4-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Design,priority:P1,area:Integrations", "milestone": "Week 2"}, {"id": "E8-F4-I2", "title": "E8-F4-I2: Implement calendar sync adapters", "body": "### Summary\nDeliver Implement calendar sync adapters for Calendar integration for SLA deadlines to meet the documented requirements.\n\n### Scope\n- [ ] Adapter creates/updates events for upcoming SLA deadlines with reminders\n- [ ] Sync respects tenant business hours and escalation overrides\n- [ ] Integration tests simulate token refresh, conflict resolution, and cancellation\n- [ ] Dependencies: E8-F4-I1, E4-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Backend,priority:P1,area:Integrations", "milestone": "Week 3"}, {"id": "E8-F4-I3", "title": "E8-F4-I3: Surface SLA calendar overlays in UI", "body": "### Summary\nDeliver Surface SLA calendar overlays in UI for Calendar integration for SLA deadlines to meet the documented requirements.\n\n### Scope\n- [ ] UI displays linked calendar events on SLA dashboards with status indicators\n- [ ] Agents can open calendar event from ticket detail with permission checks\n- [ ] Refresh mechanism updates overlays when sync events complete\n- [ ] Dependencies: E8-F4-I2, E4-F3-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E8,type:Frontend,priority:P1,area:Integrations", "milestone": "Week 4"}, {"id": "E9-F1-I1", "title": "E9-F1-I1: Establish Filament theming baseline", "body": "### Summary\nDeliver Establish Filament theming baseline for Admin portal (Filament-based) to meet the documented requirements.\n\n### Scope\n- [ ] Base theme configured with typography, spacing, and color tokens per design system\n- [ ] Dark mode and accessibility settings verified against WCAG AA\n- [ ] Style guide published for reuse across admin modules\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Frontend,priority:P0,area:Portal", "milestone": "Week 1"}, {"id": "E9-F1-I2", "title": "E9-F1-I2: Implement admin navigation shell", "body": "### Summary\nDeliver Implement admin navigation shell for Admin portal (Filament-based) to meet the documented requirements.\n\n### Scope\n- [ ] Global navigation includes dashboard, tickets, contacts, knowledge base, and settings\n- [ ] Responsive layout validated for desktop and tablet breakpoints\n- [ ] Breadcrumbs and contextual help panels wired to knowledge base articles\n- [ ] Dependencies: E9-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Frontend,priority:P1,area:Portal", "milestone": "Week 2"}, {"id": "E9-F1-I3", "title": "E9-F1-I3: Integrate module dashboards", "body": "### Summary\nDeliver Integrate module dashboards for Admin portal (Filament-based) to meet the documented requirements.\n\n### Scope\n- [ ] Admin shell loads feature-specific widgets (tickets, automation, reporting) via lazy modules\n- [ ] Permission checks hide modules lacking user access\n- [ ] Performance budget met (<2s initial paint on reference dataset)\n- [ ] Dependencies: E9-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Frontend,priority:P1,area:Portal", "milestone": "Week 3"}, {"id": "E9-F2-I1", "title": "E9-F2-I1: Define customer portal IA and UX", "body": "### Summary\nDeliver Define customer portal IA and UX for Customer portal (ticket view & submit) to meet the documented requirements.\n\n### Scope\n- [ ] UX flows cover login, ticket list, detail view, creation, and knowledge base linkage\n- [ ] Content strategy documented for empty states and success/error messaging\n- [ ] Stakeholder sign-off recorded from customer experience team\n- [ ] Dependencies: E1-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Design,priority:P0,area:Portal", "milestone": "Week 1"}, {"id": "E9-F2-I2", "title": "E9-F2-I2: Implement ticket list and detail views", "body": "### Summary\nDeliver Implement ticket list and detail views for Customer portal (ticket view & submit) to meet the documented requirements.\n\n### Scope\n- [ ] Authenticated users view ticket summaries with filters and search scoped to their organization\n- [ ] Detail view displays message history respecting visibility rules\n- [ ] Accessibility tests confirm keyboard navigation and screen reader support\n- [ ] Dependencies: E9-F2-I1, E1-F5-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Frontend,priority:P0,area:Portal", "milestone": "Week 2"}, {"id": "E9-F2-I3", "title": "E9-F2-I3: Add portal ticket update flows", "body": "### Summary\nDeliver Add portal ticket update flows for Customer portal (ticket view & submit) to meet the documented requirements.\n\n### Scope\n- [ ] Customers can post public replies, add attachments, and close tickets when permitted\n- [ ] Confirmation toasts and email notifications triggered on updates\n- [ ] Rate limiting prevents spam submissions while providing friendly messaging\n- [ ] Dependencies: E9-F2-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Frontend,priority:P1,area:Portal", "milestone": "Week 3"}, {"id": "E9-F3-I1", "title": "E9-F3-I1: Document portal authentication flows", "body": "### Summary\nDeliver Document portal authentication flows for Portal authentication (JWT, SSO, social login) to meet the documented requirements.\n\n### Scope\n- [ ] Flow diagrams cover email/password, JWT refresh, SSO handoff, and social login fallback\n- [ ] Security review approves token lifetimes and storage (cookies vs. local storage)\n- [ ] Risk assessment addresses account linking and deactivation scenarios\n- [ ] Dependencies: E8-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Design,priority:P1,area:Portal", "milestone": "Week 1"}, {"id": "E9-F3-I2", "title": "E9-F3-I2: Implement JWT-based session API", "body": "### Summary\nDeliver Implement JWT-based session API for Portal authentication (JWT, SSO, social login) to meet the documented requirements.\n\n### Scope\n- [ ] Authentication endpoints issue and refresh JWTs with tenant-aware claims\n- [ ] Middleware validates tokens and enforces RBAC for portal routes\n- [ ] Automated tests cover login, refresh, revoke, and expired token cases\n- [ ] Dependencies: E9-F3-I1, E2-F3-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Backend,priority:P0,area:Portal", "milestone": "Week 2"}, {"id": "E9-F3-I3", "title": "E9-F3-I3: Integrate social login providers", "body": "### Summary\nDeliver Integrate social login providers for Portal authentication (JWT, SSO, social login) to meet the documented requirements.\n\n### Scope\n- [ ] OAuth integrations for Google and Microsoft configured with tenant branding\n- [ ] Account linking flow handles existing contacts and new invitations\n- [ ] Audit log records social login enablement and login events with provider info\n- [ ] Dependencies: E9-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Backend,priority:P1,area:Portal", "milestone": "Week 3"}, {"id": "E9-F4-I1", "title": "E9-F4-I1: Capture brand customization requirements", "body": "### Summary\nDeliver Capture brand customization requirements for Brand customization (logos, themes, domains) to meet the documented requirements.\n\n### Scope\n- [ ] Requirements doc details tenant-specific logo formats, color tokens, typography, and favicon expectations for admin and customer portals\n- [ ] Custom domain onboarding checklist covers DNS, SSL/TLS automation, and fallback behaviors\n- [ ] Stakeholder approvals (design, marketing, compliance) captured with storage link in shared repository\n- [ ] Dependencies: E9-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Design,priority:P1,area:Portal", "milestone": "Week 1"}, {"id": "E9-F4-I2", "title": "E9-F4-I2: Implement brand asset storage and delivery services", "body": "### Summary\nDeliver Implement brand asset storage and delivery services for Brand customization (logos, themes, domains) to meet the documented requirements.\n\n### Scope\n- [ ] Service persists tenant brand assets with validation, versioning, and CDN caching headers\n- [ ] Theme configuration API exposes tenant color/typography tokens to portals with cache busting\n- [ ] Automated tests verify fallback to system defaults when tenant assets missing or invalid\n- [ ] Dependencies: E9-F4-I1, E9-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Backend,priority:P0,area:Portal", "milestone": "Week 2"}, {"id": "E9-F4-I3", "title": "E9-F4-I3: Launch brand configuration UI and domain management", "body": "### Summary\nDeliver Launch brand configuration UI and domain management for Brand customization (logos, themes, domains) to meet the documented requirements.\n\n### Scope\n- [ ] Admin UI supports uploading logos, editing theme colors with previews, and configuring custom domains with verification status\n- [ ] Domain setup wizard validates DNS records and SSL provisioning, showing progress and error guidance\n- [ ] Audit log records brand changes with before/after snapshots and actor metadata\n- [ ] Dependencies: E9-F4-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E9,type:Frontend,priority:P0,area:Portal", "milestone": "Week 3"}, {"id": "E10-F1-I1", "title": "E10-F1-I1: Evaluate two-factor authentication methods", "body": "### Summary\nDeliver Evaluate two-factor authentication methods for Two-factor authentication to meet the documented requirements.\n\n### Scope\n- [ ] Analysis compares TOTP, WebAuthn, and SMS with usability, cost, and compliance considerations\n- [ ] Recommendation includes backup code policy, recovery flows, and enforcement tiers per role\n- [ ] Security and product sign-offs documented with decision log location\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E10,type:Design,priority:P1,area:Security", "milestone": "Week 1"}, {"id": "E10-F1-I2", "title": "E10-F1-I2: Implement backend support for 2FA enrollment and enforcement", "body": "### Summary\nDeliver Implement backend support for 2FA enrollment and enforcement for Two-factor authentication to meet the documented requirements.\n\n### Scope\n- [ ] Users can enroll TOTP devices, regenerate backup codes, and enforce 2FA at login for Admin/Agent roles\n- [ ] Middleware enforces 2FA completion before accessing protected routes, respecting tenant policies\n- [ ] Tests cover enrollment, verification, backup code usage, and lockout handling\n- [ ] Dependencies: E10-F1-I1, E2-F3-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E10,type:Backend,priority:P0,area:Security", "milestone": "Week 2"}, {"id": "E10-F1-I3", "title": "E10-F1-I3: Provide user interfaces for 2FA setup and recovery", "body": "### Summary\nDeliver Provide user interfaces for 2FA setup and recovery for Two-factor authentication to meet the documented requirements.\n\n### Scope\n- [ ] Settings page guides enrollment with QR code, code verification, and backup code download\n- [ ] Login flow handles 2FA prompts, remember-device options, and fallback to backup codes\n- [ ] Accessibility review ensures screen reader labels and keyboard navigation across steps\n- [ ] Dependencies: E10-F1-I2, E9-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E10,type:Frontend,priority:P1,area:Security", "milestone": "Week 3"}, {"id": "E10-F2-I1", "title": "E10-F2-I1: Conduct RBAC enforcement gap analysis", "body": "### Summary\nDeliver Conduct RBAC enforcement gap analysis for Security posture and RBAC enforcement audits to meet the documented requirements.\n\n### Scope\n- [ ] Audit matrix maps all critical routes, commands, and queues to required permissions per role\n- [ ] Findings include prioritized remediation list with estimated effort and owners\n- [ ] Review meeting minutes captured with agreed remediation timeline\n- [ ] Dependencies: E2-F3-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E10,type:Design,priority:P0,area:Security", "milestone": "Week 2"}, {"id": "E10-F2-I2", "title": "E10-F2-I2: Expand automated permission coverage tests", "body": "### Summary\nDeliver Expand automated permission coverage tests for Security posture and RBAC enforcement audits to meet the documented requirements.\n\n### Scope\n- [ ] Test suite asserts RBAC middleware coverage for representative admin, portal, and API endpoints\n- [ ] Builds fail when new routes lack explicit permission annotations\n- [ ] Report generated for CI summarizing guarded vs. unguarded routes per module\n- [ ] Dependencies: E10-F2-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E10,type:Backend,priority:P0,area:Security", "milestone": "Week 3"}, {"id": "E10-F2-I3", "title": "E10-F2-I3: Configure security monitoring and alerting", "body": "### Summary\nDeliver Configure security monitoring and alerting for Security posture and RBAC enforcement audits to meet the documented requirements.\n\n### Scope\n- [ ] Centralized logs capture authorization failures and suspicious access patterns with tenant metadata\n- [ ] Alert rules notify security channel on repeated RBAC violations or 2FA failures beyond thresholds\n- [ ] Runbook documents response steps and escalation paths for detected incidents\n- [ ] Dependencies: E10-F2-I2, E11-F4-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E10,type:DevOps,priority:P1,area:Security", "milestone": "Week 4"}, {"id": "E11-F1-I1", "title": "E11-F1-I1: Define container build specification", "body": "### Summary\nDeliver Define container build specification for Dockerized multi-stage build to meet the documented requirements.\n\n### Scope\n- [ ] Document outlines base images, build arguments, caching strategy, and secrets handling\n- [ ] Local development parity requirements captured with volume mounts and override patterns\n- [ ] Security review confirms minimum supported OS versions and vulnerability scanning cadence\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:Design,priority:P1,area:Devops", "milestone": "Week 1"}, {"id": "E11-F1-I2", "title": "E11-F1-I2: Implement multi-stage Dockerfile and build pipeline", "body": "### Summary\nDeliver Implement multi-stage Dockerfile and build pipeline for Dockerized multi-stage build to meet the documented requirements.\n\n### Scope\n- [ ] Dockerfile includes separate stages for dependencies, tests, and production runtime with size benchmarks\n- [ ] CI build validates image creation, runs application tests inside container, and publishes artifact\n- [ ] Documentation explains how to run and debug containers locally\n- [ ] Dependencies: E11-F1-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P0,area:Devops", "milestone": "Week 2"}, {"id": "E11-F1-I3", "title": "E11-F1-I3: Configure container registry publishing and scanning", "body": "### Summary\nDeliver Configure container registry publishing and scanning for Dockerized multi-stage build to meet the documented requirements.\n\n### Scope\n- [ ] Images push to secured registry with tenant-aware tagging conventions (dev/stage/prod)\n- [ ] Automated vulnerability scans execute post-push with alerting on critical findings\n- [ ] Access controls and retention policies documented for registry management\n- [ ] Dependencies: E11-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P1,area:Devops", "milestone": "Week 3"}, {"id": "E11-F2-I1", "title": "E11-F2-I1: Document queue monitoring requirements", "body": "### Summary\nDeliver Document queue monitoring requirements for Horizon dashboard for queues to meet the documented requirements.\n\n### Scope\n- [ ] Requirements list tracked queues, metrics (wait time, throughput), and alert thresholds\n- [ ] Security assessment covers Horizon authentication, authorization, and multi-tenant visibility\n- [ ] Approval recorded from support operations and SRE stakeholders\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:Design,priority:P1,area:Devops", "milestone": "Week 1"}, {"id": "E11-F2-I2", "title": "E11-F2-I2: Deploy Horizon dashboard infrastructure", "body": "### Summary\nDeliver Deploy Horizon dashboard infrastructure for Horizon dashboard for queues to meet the documented requirements.\n\n### Scope\n- [ ] Horizon configured with supervisor definitions, authentication guards, and SSL termination\n- [ ] Dashboard accessible via secured route with role-based access enforced\n- [ ] Health checks integrated with existing monitoring to ensure worker availability\n- [ ] Dependencies: E11-F2-I1, E11-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P0,area:Devops", "milestone": "Week 2"}, {"id": "E11-F2-I3", "title": "E11-F2-I3: Integrate queue alerting and SLO reporting", "body": "### Summary\nDeliver Integrate queue alerting and SLO reporting for Horizon dashboard for queues to meet the documented requirements.\n\n### Scope\n- [ ] Alert rules trigger on backlog thresholds, failed jobs, and stalled workers with escalation policy\n- [ ] Weekly report summarizes queue performance against documented SLOs\n- [ ] Runbook updated with remediation steps for common Horizon incidents\n- [ ] Dependencies: E11-F2-I2, E11-F4-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P1,area:Devops", "milestone": "Week 3"}, {"id": "E11-F3-I1", "title": "E11-F3-I1: Plan Redis topology and sizing", "body": "### Summary\nDeliver Plan Redis topology and sizing for Redis caching + session storage to meet the documented requirements.\n\n### Scope\n- [ ] Architecture doc specifies high-availability setup, persistence strategy, and tenant isolation\n- [ ] Capacity planning estimates memory requirements for cache, sessions, and queues\n- [ ] Security checklist covers encryption in transit, authentication, and maintenance windows\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:Design,priority:P1,area:Devops", "milestone": "Week 1"}, {"id": "E11-F3-I2", "title": "E11-F3-I2: Implement Redis configuration for cache and sessions", "body": "### Summary\nDeliver Implement Redis configuration for cache and sessions for Redis caching + session storage to meet the documented requirements.\n\n### Scope\n- [ ] Application configuration switches cache and session drivers to Redis with environment overrides\n- [ ] Graceful fallback implemented for Redis outages with warning telemetry\n- [ ] Automated tests verify cache tagging, session persistence, and TTL behaviors\n- [ ] Dependencies: E11-F3-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:Backend,priority:P0,area:Devops", "milestone": "Week 2"}, {"id": "E11-F3-I3", "title": "E11-F3-I3: Document cache warming and failover procedures", "body": "### Summary\nDeliver Document cache warming and failover procedures for Redis caching + session storage to meet the documented requirements.\n\n### Scope\n- [ ] Runbook outlines cache warming scripts, sentinel/failover steps, and validation checks\n- [ ] Incident simulation exercises executed with results logged and improvements captured\n- [ ] Monitoring hooks confirm successful failover with alert suppression controls\n- [ ] Dependencies: E11-F3-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P1,area:Devops", "milestone": "Week 3"}, {"id": "E11-F4-I1", "title": "E11-F4-I1: Select observability stack and tooling", "body": "### Summary\nDeliver Select observability stack and tooling for Observability \u2013 logs, metrics, alerts to meet the documented requirements.\n\n### Scope\n- [ ] Comparative analysis of ELK, OpenSearch, and Loki/Grafana stacks with cost and scalability metrics\n- [ ] Decision records log retention policies, metrics storage, and trace sampling strategy\n- [ ] Security review signs off on data handling and access controls\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:Design,priority:P0,area:Devops", "milestone": "Week 1"}, {"id": "E11-F4-I2", "title": "E11-F4-I2: Implement centralized logging and metrics pipelines", "body": "### Summary\nDeliver Implement centralized logging and metrics pipelines for Observability \u2013 logs, metrics, alerts to meet the documented requirements.\n\n### Scope\n- [ ] Application emits structured logs and Prometheus-compatible metrics with tenant/context tags\n- [ ] Pipelines aggregate logs/metrics into chosen stack with buffering and retry safeguards\n- [ ] Smoke tests verify log ingestion, metrics scraping, and trace collection across environments\n- [ ] Dependencies: E11-F4-I1\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P0,area:Devops", "milestone": "Week 2"}, {"id": "E11-F4-I3", "title": "E11-F4-I3: Configure alerting and dashboards", "body": "### Summary\nDeliver Configure alerting and dashboards for Observability \u2013 logs, metrics, alerts to meet the documented requirements.\n\n### Scope\n- [ ] Dashboards visualize key KPIs (request latency, error rate, job throughput) with shared templates\n- [ ] Alert policies notify appropriate teams with escalation chains and maintenance windows\n- [ ] On-call runbook updated with dashboard links and troubleshooting checklists\n- [ ] Dependencies: E11-F4-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P1,area:Devops", "milestone": "Week 3"}, {"id": "E11-F5-I1", "title": "E11-F5-I1: Document CI/CD workflow requirements", "body": "### Summary\nDeliver Document CI/CD workflow requirements for CI/CD pipeline setup to meet the documented requirements.\n\n### Scope\n- [ ] Workflow spec defines stages (lint, tests, build, security scan, deploy) with success criteria\n- [ ] Approval matrix lists required reviewers and manual gates per environment\n- [ ] Compliance review confirms artifact retention and audit logging needs\n- [ ] Dependencies: None\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:Design,priority:P1,area:Devops", "milestone": "Week 1"}, {"id": "E11-F5-I2", "title": "E11-F5-I2: Implement CI pipelines with quality gates", "body": "### Summary\nDeliver Implement CI pipelines with quality gates for CI/CD pipeline setup to meet the documented requirements.\n\n### Scope\n- [ ] CI platform executes linting, unit/integration tests, and builds Docker images with caching\n- [ ] Pipeline publishes test reports, coverage, and vulnerability scan results\n- [ ] Failures surface actionable logs with notification to engineering channel\n- [ ] Dependencies: E11-F5-I1, E11-F1-I2\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P0,area:Devops", "milestone": "Week 2"}, {"id": "E11-F5-I3", "title": "E11-F5-I3: Automate CD with environment promotions and rollbacks", "body": "### Summary\nDeliver Automate CD with environment promotions and rollbacks for CI/CD pipeline setup to meet the documented requirements.\n\n### Scope\n- [ ] Deployment pipeline promotes artifacts through staging to production with approval gates\n- [ ] Rollback procedures automated with verification checks and alerting\n- [ ] Post-deploy health checks integrate with observability stack for go/no-go decisions\n- [ ] Dependencies: E11-F5-I2, E11-F1-I3\n\n### Acceptance Criteria\n- [ ] CRUD/API/Filament with RBAC\n- [ ] Tenant/brand scope enforced\n- [ ] Audit log entries\n- [ ] Indexes on foreign keys\n- [ ] Tests (happy + error paths)\n\n### Notes\n- tenant-scope, RBAC, audit-log\n- Observability: JSON logs + correlation-id\n- Dependencies: None\n", "labels": "epic:E11,type:DevOps,priority:P1,area:Devops", "milestone": "Week 3"}]